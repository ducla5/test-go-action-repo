name: APICI
on: ['pull_request']
jobs:
  golangci-lint:
    name: Code Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Go modules
        id: cache-go
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('goapp/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Get Modules
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: go get api
        working-directory: goapp
      - name: Build
        run: go build api
        working-directory: goapp
      - name: Test
        run: go test
        working-directory: goapp
      - name: Analytics
        uses: ducla5/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.GITHUBTOKEN }}
          golangci_lint_flags: "--disable-all --exclude-use-default=false -E deadcode -E errcheck -E unused -E gofmt -E goimports -E golint -E gocritic -E whitespace"
          directory: goapp/
          reporter: github-pr-check
          tool_name: CodeReview
          level: error  
